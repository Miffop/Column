{это интерпретатор бреинфака}

{заполняем массив ноликами}
#Arr::0;
!for(#i::-1024;#i<1024;#i:+:1;)
//
	#Arr|(#i)::0;
\\

{указатель на текущую команду}
#ComPtr::0;
{метод интерпретатора}
!meth $interpretator(#Code)
//
	{интерпретируем посимвольно входную строку}
	!while(#ComPtr<@String|Length(#Code))
	//
		#Result::0;{эта строчка потом понадобиться для циклов}
		#com::@String|Char(#Code,#ComPtr);{cчитываем символ строки}
		!if(#com=='+')
		//
			#Arr|(#Arr)::#Arr|(#Arr)+1 & 255;
		\\
		!else !if(#com=='-')
		//
			#Arr|(#Arr)::#Arr|(#Arr)-1 & 255;
		\\
		!else !if(#com=='>')
		//
			#Arr:+:1;
		\\
		!else !if(#com=='<')
		//
			#Arr:-:1;
		\\
		!else !if(#com==']'){завешаем цикл если в текущей ячейке ноль}
		//
			!if(#Arr|(#Arr))
			//
				#Result::1;
				!break;
			\\
			!break;
		\\
		!else !if(#com=='[')
		//
			#ComPtr::#ComPtr+1;
			!if(#Arr|(#Arr)){если в текущей чейке не ноль то входим в цикл}
			//
				#Save::#ComPtr;
				!while(@interpretator(#Code))
				//
					#ComPtr::#Save;
				\\
			\\
			!else{иначе ищем конец цикла}
			//
				#BraceCounter::1;
				!while(#BraceCounter!=0)
				//
					#com::@String|Char(#Code,#ComPtr);
					!if(#com=='[')
					//
						#BraceCounter::#BraceCounter+1;
					\\
					!else !if(#com==']')
					//
						#BraceCounter::#BraceCounter-1;
					\\
					#ComPtr:+:1;
				\\
				!continue;
			\\
		\\
		!else !if(#com=='.')
		//
			@Console|WriteChar(#Arr|(#Arr));
		\\
		!else !if(#com==',')
		//
			#Arr|(#Arr)::@Console|ReadKey();
		\\
		#ComPtr::#ComPtr+1;{следующая команда}
	\\
\\

@Console|WriteLine("Write your BF code:");
#YourCode::@Console|ReadLine();

@interpretator(#YourCode);

@Console|WriteLine();
@Console|Write("Press any key to exit...");
@Console|ReadKey();

{Ну все, мой язык точно тьюринг-полный}
